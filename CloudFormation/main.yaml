AWSTemplateFormatVersion: '2010-09-09'
Description: 'Audio Transcription and Summary Workflow'

Parameters:
  InputAudioBucketName:
    Type: String
    Description: Name of the input audio S3 bucket
    Default: input-audio-123456789-987654321

  TranscribeOutputBucketName:
    Type: String
    Description: Name of the transcribe output S3 bucket
    Default: transcribe-output-123456789-987654321

  SummaryOutputBucketName:
    Type: String
    Description: Name of the summary output S3 bucket
    Default: finished-result-of-audio-123456789-987654321

Resources:
  # SQS Queue
  SQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: sqs-to-lambda
      MessageRetentionPeriod: 345600  # 4 дні
      VisibilityTimeout: 120

  # IAM Role для Lambda, що запускає транскрибацію
  DataToTranscribeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DataToTranscribePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # Дозволи на логи
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

              # Дозволи на читання вхідних файлів із S3
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub 'arn:aws:s3:::${InputAudioBucketName}/*'

              # Дозволи на запуск Transcribe
              - Effect: Allow
                Action:
                  - transcribe:StartTranscriptionJob
                Resource: '*'

              # Дозволи на запис результатів Transcribe у S3
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Sub 'arn:aws:s3:::${TranscribeOutputBucketName}/*'

              # Дозволи на роботу із SQS (необхідні для EventSourceMapping)
              - Effect: Allow
                Action: 
                  - sqs:*
                Resource: '*'

  # IAM Role для Lambda, що обробляє транскрипцію (сумаризація)
  TranscribeToBedrockRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: TranscribeToBedrockPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - s3:*
                Resource: !Sub 'arn:aws:s3:::${TranscribeOutputBucketName}/*'
              - Effect: Allow
                Action:
                  - bedrock:InvokeModel
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:*
                Resource: !Sub 'arn:aws:s3:::${SummaryOutputBucketName}/*'

  # Lambda для запуску транскрибації
  DataToTranscribeLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: sqs-to-transcribe
      Runtime: python3.9
      Handler: lambda_function.lambda_handler
      Role: !GetAtt DataToTranscribeRole.Arn
      Code:
        S3Bucket: transcribe-test-bucket-wise
        S3Key: transcribe.zip
      Timeout: 60
      MemorySize: 128

  # Lambda для обробки транскрипції (сумаризація)
  TranscribeToBedrockLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: transcribe-to-bedrock
      Runtime: python3.9
      Handler: lambda_function.lambda_handler
      Role: !GetAtt TranscribeToBedrockRole.Arn
      Code:
        S3Bucket: transcribe-test-bucket-wise
        S3Key: summarize.zip
      Timeout: 300
      MemorySize: 128

  # S3-бакет для вхідних аудіофайлів (inline notification -> SQS)
  InputAudioBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref InputAudioBucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      NotificationConfiguration:
        QueueConfigurations:
          - Event: s3:ObjectCreated:*
            Queue: !GetAtt SQSQueue.Arn

  # S3-бакет для виводу транскрипцій (inline notification -> Lambda)
  TranscribeOutputBucket:
    Type: AWS::S3::Bucket
    DependsOn: TranscribeToBedrockLambdaPermission
    Properties:
      BucketName: !Ref TranscribeOutputBucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt TranscribeToBedrockLambda.Arn

  # S3-бакет для фінальних результатів
  SummaryOutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref SummaryOutputBucketName

  # Мапінг подій SQS -> Lambda
  SQSEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn: !GetAtt SQSQueue.Arn
      FunctionName: !GetAtt DataToTranscribeLambda.Arn

  # Дозвіл на виклик Lambda через SQS
  DataToTranscribeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref DataToTranscribeLambda
      Principal: sqs.amazonaws.com
      SourceArn: !GetAtt SQSQueue.Arn

  # Політика для дозволу S3 надсилати повідомлення у SQS
  SQSQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref SQSQueue
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action: sqs:*
            Resource: !GetAtt SQSQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Sub 'arn:aws:s3:::${InputAudioBucketName}'

  # Дозвіл на виклик Lambda (TranscribeToBedrockLambda) через S3
  TranscribeToBedrockLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref TranscribeToBedrockLambda
      Principal: s3.amazonaws.com
      SourceArn: !Sub 'arn:aws:s3:::${TranscribeOutputBucketName}'

Outputs:
  InputAudioBucketName:
    Description: Input Audio Bucket Name
    Value: !Ref InputAudioBucket

  TranscribeOutputBucketName:
    Description: Transcribe Output Bucket Name
    Value: !Ref TranscribeOutputBucket

  SummaryOutputBucketName:
    Description: Summary Output Bucket Name
    Value: !Ref SummaryOutputBucket

  SQSQueueURL:
    Description: SQS Queue URL
    Value: !Ref SQSQueue

  DataToTranscribeLambdaArn:
    Description: Data to Transcribe Lambda Function ARN
    Value: !GetAtt DataToTranscribeLambda.Arn

  TranscribeToBedrockLambdaArn:
    Description: Transcribe to Bedrock Lambda Function ARN
    Value: !GetAtt TranscribeToBedrockLambda.Arn
